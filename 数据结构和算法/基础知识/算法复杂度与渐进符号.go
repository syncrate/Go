package main

func main() {
/*
	算法的优先级排列如下，一般排在上面的要优于排在下面的：
	1.常数复杂度：O(1)
   	2.对数复杂度：O(logn)
	3.线性复杂度：O(n)
	4.平方复杂度：O(n^2)
	5.乘方复杂度：O(n^2)，O(n^3)
	6.指数复杂度：O(2^n)
	7.阶乘复杂度：O(n!)
	8.无限大指数复杂度 n的n次方：O(n^n)
	*/


/*渐进符号
 记号	含义			通俗理解
  Θ		紧确界		相当于”=”
  O		上界	相当于	”<=”
  ο		非紧的上界	相当于”<”
  Ω		下界	相当于	”>=”
  ω		非紧的下界	相当于”>”
 */

/* 延伸-计算理论：P和NP问题
   在计算机科学中，有一个专门的分支研究问题的可计算性，叫做计算理论。
   我们用计算机算法来解决一个问题，如果一个问题被证明很难计算，或者只能暴力枚举来解决，那么我们就不必花大力气去质疑使用的算法是不是错了，为什么这么慢，计算怎么久都没出结果，到底有没有更好的算法。
   计算机科学把一个待解决的问题分类为：P 问题，NP 问题，NPC 问题，NP-hard 问题。
*/


}